= @user.user_name
,

\#{t 'user_notifier.review_flagged_for.please_review', :basket_name => @basket.name}
- for rev in @disputed_revisions
  \----
  
  \# #{rev.version}: #{h(rev.title)}
  
  \#{t 'user_notifier.review_flagged_for.marked_as', :flag => h(rev.flags.first), :time => rev.flagged_at}
  
  \#{t 'user_notifier.review_flagged_for.review_version'}
  - item = rev.send(rev.original_class.name.tableize.singularize.to_sym)
  - zoom_class_controller = item.class.name.tableize
  - case item.class.name
  - when "StillImage"
  - zoom_class_controller = 'images'
  - when "Video"
  - zoom_class_controller = 'video'
  - when "Comment"
  - zoom_class_controller = 'comments'
  - when "AudioRecording"
  - zoom_class_controller = 'audio'
  - end
  - site_url = 'http://' + SITE_NAME
  - preview_url = site_url + url_for(:controller => zoom_class_controller,
  - :urlified_name => item.basket.urlified_name,
  - :action => 'preview',
  - :id => item.id,
  - :version => rev.version)
  - url_for_history = site_url + url_for(:controller => zoom_class_controller,
  - :urlified_name => item.basket.urlified_name,
  - :action => :history, :id => item.id)
  = preview_url
  = t 'user_notifier.review_flagged_for.or'
  = t 'user_notifier.review_flagged_for.view_item_history'
  = url_for_history
  \----
= render 'email_footer'
